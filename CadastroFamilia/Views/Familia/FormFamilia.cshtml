@model CadastroFamilia.ViewModels.FormFamiliaViewModel
@{
    ViewBag.Title = "Cadastro de Familia";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Criando Familia</h3>

@using (Html.BeginForm("Salva", "Familia"))
{
    <div id="esposa">
        <h4>@Html.LabelFor(m => m.Familia.Esposa)</h4>
        <div class="form-group">
            @Html.LabelFor(m => m.Familia.Esposa.Nome)
            @Html.TextBoxFor(m => m.Familia.Esposa.Nome, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Familia.Esposa.Nome)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Familia.Esposa.Email)
            @Html.TextBoxFor(m => m.Familia.Esposa.Email, new { @type = "email", placeholder = "esposa@email.com", @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Familia.Esposa.Nascimento)
            @Html.EditorFor(m => m.Familia.Esposa.Nascimento,
           new { htmlAttributes = new { @Value = @Model.Familia.Esposa.Nascimento.ToString("yyyy-MM-dd"), @class = "form-control" } })
            @*new { @type = "date", @class = "form-control datepicker", @Value = @Model.Familia.Esposa.Nascimento.ToString() })*@
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Familia.Esposa.Altura)
            @Html.TextBoxFor(m => m.Familia.Esposa.Altura, new { @type = "text", @pattern = "[0-9],[0-9]{2}", @placeholder = "0,00", @class = "form-control" })
        </div>
    </div>

    <div id="marido">
        <h4>@Html.LabelFor(m => m.Familia.Marido)</h4>
        <div class="form-group">
            @Html.LabelFor(m => m.Familia.Marido.Nome)
            @Html.TextBoxFor(m => m.Familia.Marido.Nome, new { @class = "form-control" })
            @*<input class="form-control" data-val="true" data-val-length="O campo Nome deve ser uma cadeia de caracteres com um comprimento máximo de 255." data-val-length-max="255" data-val-required="O campo Nome é obrigatório." name="Familia.Marido.Nome" type="text" value="" />*@

        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Familia.Marido.Email)
            @Html.TextBoxFor(m => m.Familia.Marido.Email, new { @type = "email", placeholder = "marido@email.com", @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Familia.Marido.Nascimento)
            @Html.EditorFor(m => m.Familia.Marido.Nascimento,
           new { htmlAttributes = new { @Value = @Model.Familia.Marido.Nascimento.ToString("yyyy-MM-dd"), @class = "form-control" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Familia.Marido.Altura)
            @Html.TextBoxFor(m => m.Familia.Marido.Altura, new { @type = "text", @pattern = "[0-9],[0-9]{2}", @placeholder = "0,00", @class = "form-control" })
        </div>
    </div>
    <div id="filhos">
        @*TODO: FILHOS*@

        <h4>@Html.LabelFor(m => m.Familia.Filhos)</h4>
        @if (Model.Familia.Filhos.Count == 0)
        {
            <p>Esta família ainda não possui filhos</p>
        }
        else
        {
            @Html.LabelFor(m => m.Familia.Filhos[0].Nome)
            @Html.TextBoxFor(m => m.Familia.Filhos[0].Nome, new { @class = "form-control" })

            @Html.LabelFor(m => m.Familia.Filhos[0].Nascimento)
            @Html.EditorFor(m => m.Familia.Filhos[0].Nascimento, new { htmlAttributes = new { @Value = @Model.Familia.Filhos[0].Nascimento.ToString("yyyy-MM-dd"), @class = "form-control" } })
        }
        @*Botão para adicionar filhos que adiciona campos ao formulário dinamicamente*@
        <button type="button" class="btn btn-secondary" id="btnAddFilho">Adicionar Filho</button>

    </div>
    @Html.HiddenFor(m => @Model.Familia.Id)
    <button type="submit" class="btn btn-primary">Salvar</button>
}